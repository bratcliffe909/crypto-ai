import React from 'react';
import { Card, Table } from 'react-bootstrap';
import { BsExclamationTriangle } from 'react-icons/bs';
import useApi from '../../hooks/useApi';
import coingeckoApi from '../../services/api/coingecko';
import LoadingSpinner from '../common/LoadingSpinner';
import { formatPrice, formatPercentage, formatMarketCap } from '../../utils/formatters';

const MarketOverview = () => {
  const { data, loading, error } = useApi(
    () => coingeckoApi.getMarketData('usd', null, 10)
  );

  if (loading && !data) return <LoadingSpinner />;

  return (
    <Card className="mb-4">
      <Card.Header className="d-flex justify-content-between align-items-center">
        <h5 className="mb-0">Market Overview</h5>
        {error && (
          <BsExclamationTriangle className="text-warning" title="Failed to update" />
        )}
      </Card.Header>
      <Card.Body className="p-0">
        <Table responsive hover className="mb-0">
          <thead>
            <tr>
              <th>#</th>
              <th>Coin</th>
              <th>Price</th>
              <th>24h Change</th>
              <th>Market Cap</th>
              <th>Volume (24h)</th>
            </tr>
          </thead>
          <tbody>
            {data?.map((coin, index) => (
              <tr key={coin.id}>
                <td>{index + 1}</td>
                <td>
                  <div className="d-flex align-items-center">
                    <img 
                      src={coin.image} 
                      alt={coin.name}
                      className="crypto-icon me-2"
                      width="20"
                      height="20"
                    />
                    <span className="fw-medium">{coin.name}</span>
                    <span className="text-muted ms-1">{coin.symbol.toUpperCase()}</span>
                  </div>
                </td>
                <td className="font-monospace">{formatPrice(coin.current_price)}</td>
                <td className={coin.price_change_percentage_24h > 0 ? 'price-up' : 'price-down'}>
                  {formatPercentage(coin.price_change_percentage_24h)}
                </td>
                <td>{formatMarketCap(coin.market_cap)}</td>
                <td>{formatMarketCap(coin.total_volume)}</td>
              </tr>
            ))}
          </tbody>
        </Table>
      </Card.Body>
    </Card>
  );
};

export default MarketOverview;
